import React, { useState, useEffect } from 'react'
import axios from '../utils/axios'
import { Lightbulb, RefreshCw, Heart, Brain, Activity, Moon, Dumbbell, BookOpen } from 'lucide-react'

export default function Recommendations() {
  const [recommendations, setRecommendations] = useState([])
  const [loading, setLoading] = useState(false)

  useEffect(() => {
    fetchRecommendations()
  }, [])

  const fetchRecommendations = async () => {
    setLoading(true)
    try {
      const response = await axios.get('/api/recommendations')
      setRecommendations(response.data.recommendations || [])
    } catch (error) {
      console.error('Error fetching recommendations:', error)
    } finally {
      setLoading(false)
    }
  }

  const getCategoryIcon = (category) => {
    const icons = {
      mental_health: Heart,
      stress_relief: Activity,
      sleep: Moon,
      exercise: Dumbbell,
      cognitive: Brain,
      wellness: Lightbulb
    }
    const Icon = icons[category] || Lightbulb
    return <Icon size={24} />
  }

  const getCategoryColor = (category) => {
    const colors = {
      mental_health: 'pink',
      stress_relief: 'orange',
      sleep: 'blue',
      exercise: 'green',
      cognitive: 'purple',
      wellness: 'yellow'
    }
    return colors[category] || 'gray'
  }

  const getPriorityBadge = (priority) => {
    const badges = {
      high: 'badge-danger',
      medium: 'badge-warning',
      low: 'badge-info'
    }
    return badges[priority] || 'badge-info'
  }

  return (
    <div className="space-y-6 animate-fadeIn">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Recommendations</h1>
          <p className="text-gray-600 mt-1">Personalized wellness suggestions based on your data</p>
        </div>
        <button
          onClick={fetchRecommendations}
          disabled={loading}
          className="btn btn-primary flex items-center space-x-2"
        >
          <RefreshCw size={18} className={loading ? 'animate-spin' : ''} />
          <span>Refresh</span>
        </button>
      </div>

      {/* AI-Powered Notice */}
      <div className="card bg-gradient-to-r from-primary-50 to-purple-50 border-primary-200">
        <div className="flex items-start space-x-4">
          <div className="bg-primary-600 p-3 rounded-lg">
            <Lightbulb className="text-white" size={32} />
          </div>
          <div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">AI-Powered Recommendations</h3>
            <p className="text-gray-700">
              These personalized recommendations are generated by analyzing your mood, cognitive performance, 
              health metrics, and behavioral patterns. They are designed to help you improve your overall 
              mental and physical well-being.
            </p>
          </div>
        </div>
      </div>

      {/* Recommendations Grid */}
      {loading ? (
        <div className="flex items-center justify-center h-64">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
        </div>
      ) : recommendations.length > 0 ? (
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {recommendations.map((rec, index) => {
            const color = getCategoryColor(rec.category)
            return (
              <div key={index} className="card hover:shadow-lg transition-shadow">
                <div className="flex items-start justify-between mb-4">
                  <div className={`bg-${color}-100 p-3 rounded-lg`}>
                    <div className={`text-${color}-600`}>
                      {getCategoryIcon(rec.category)}
                    </div>
                  </div>
                  <span className={`badge ${getPriorityBadge(rec.priority)}`}>
                    {rec.priority.toUpperCase()}
                  </span>
                </div>

                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  {rec.title}
                </h3>
                
                <p className="text-gray-700 mb-4">
                  {rec.description}
                </p>

                <div className="flex items-center justify-between pt-4 border-t border-gray-200">
                  <span className="text-sm text-gray-500 capitalize">
                    {rec.category.replace('_', ' ')}
                  </span>
                  <button className="text-primary-600 hover:text-primary-700 font-medium text-sm">
                    Learn More â†’
                  </button>
                </div>
              </div>
            )
          })}
        </div>
      ) : (
        <div className="card text-center py-12">
          <Lightbulb className="text-gray-400 mx-auto mb-4" size={64} />
          <h3 className="text-xl font-semibold text-gray-900 mb-2">No recommendations yet</h3>
          <p className="text-gray-600 mb-6">
            Start tracking your mood, health metrics, and cognitive performance to receive personalized recommendations
          </p>
        </div>
      )}

      {/* Wellness Categories */}
      <div className="card">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Wellness Categories</h3>
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
          {[
            { name: 'Mental Health', icon: Heart, color: 'pink' },
            { name: 'Stress Relief', icon: Activity, color: 'orange' },
            { name: 'Sleep', icon: Moon, color: 'blue' },
            { name: 'Exercise', icon: Dumbbell, color: 'green' },
            { name: 'Cognitive', icon: Brain, color: 'purple' },
            { name: 'Wellness', icon: Lightbulb, color: 'yellow' }
          ].map((category) => {
            const Icon = category.icon
            return (
              <div key={category.name} className="text-center">
                <div className={`bg-${category.color}-100 p-4 rounded-lg mb-2 inline-block`}>
                  <Icon className={`text-${category.color}-600`} size={24} />
                </div>
                <p className="text-sm font-medium text-gray-700">{category.name}</p>
              </div>
            )
          })}
        </div>
      </div>

      {/* Tips */}
      <div className="card bg-green-50 border-green-200">
        <h3 className="text-lg font-semibold text-gray-900 mb-3">ðŸ’¡ How to Use Recommendations</h3>
        <ul className="space-y-2 text-gray-700">
          <li className="flex items-start">
            <span className="text-green-600 mr-2">â€¢</span>
            <span>Prioritize high-priority recommendations for immediate action</span>
          </li>
          <li className="flex items-start">
            <span className="text-green-600 mr-2">â€¢</span>
            <span>Implement one or two recommendations at a time for sustainable change</span>
          </li>
          <li className="flex items-start">
            <span className="text-green-600 mr-2">â€¢</span>
            <span>Track your progress and refresh recommendations regularly</span>
          </li>
          <li className="flex items-start">
            <span className="text-green-600 mr-2">â€¢</span>
            <span>Consult healthcare professionals for serious concerns</span>
          </li>
        </ul>
      </div>
    </div>
  )
}
